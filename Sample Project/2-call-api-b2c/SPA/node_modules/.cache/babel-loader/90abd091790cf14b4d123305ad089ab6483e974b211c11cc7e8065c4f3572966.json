{"ast":null,"code":"var _jsxFileName = \"/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/src/components/TodoItem.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usePrevious = value => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport const TodoItem = props => {\n  _s2();\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n  const handleChange = e => {\n    setNewName(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName('');\n    setEditing(false);\n  };\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-edit\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: props.id,\n          children: [\"New name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: props.id,\n          type: \"text\",\n          value: newName,\n          onChange: handleChange,\n          ref: editFieldRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            type: \"button\",\n            onClick: () => setEditing(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-view\",\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.completeTask(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"todo-view-btn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: () => setEditing(true),\n          ref: editButtonRef,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => props.deleteTask(props.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    className: \"todo-item\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 12\n  }, this);\n};\n_s2(TodoItem, \"wty2LFvLjeZJqAVTSFbOh/PAiDA=\", false, function () {\n  return [usePrevious];\n});\n_c = TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","ButtonGroup","Form","ListGroup","jsxDEV","_jsxDEV","usePrevious","value","_s","ref","current","TodoItem","props","_s2","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","handleChange","e","target","handleSubmit","preventDefault","trim","editTask","id","editingTemplate","className","children","onSubmit","Group","Label","htmlFor","name","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","variant","onClick","viewTemplate","Check","inline","defaultChecked","completed","completeTask","deleteTask","focus","Item","_c","$RefreshReg$"],"sources":["/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst usePrevious = (value) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport const TodoItem = (props) => {\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState('');\n\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    const wasEditing = usePrevious(isEditing);\n\n    const handleChange = (e) => {\n        setNewName(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (!newName.trim()) {\n            return;\n        }\n\n        props.editTask(props.id, newName);\n        setNewName('');\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <div className=\"todo-edit\">\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label htmlFor={props.id}>New name for {props.name}</Form.Label>\n                <Form.Control\n                    id={props.id}\n                    type=\"text\"\n                    value={newName}\n                    onChange={handleChange}\n                    ref={editFieldRef}\n                />\n            </Form.Group>\n            <div className=\"btn-group\">\n                <ButtonGroup>\n                    <Button variant=\"warning\" type=\"button\" onClick={() => setEditing(false)}>Cancel</Button>\n                    <Button variant=\"success\" type=\"submit\">Save</Button>\n                </ButtonGroup>\n            </div>\n        </Form>\n        </div>\n    );\n\n    const viewTemplate = (\n        <div className=\"todo-view\">\n            <Form.Group>\n                <Form.Check\n                    inline\n                    id={props.id}\n                    type=\"checkbox\"\n                    defaultChecked={props.completed}\n                    onChange={() => props.completeTask(props.id)}\n                />\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    {props.name}\n                </label>\n                <ButtonGroup className=\"todo-view-btn\">\n                    <Button variant=\"warning\" onClick={() => setEditing(true)} ref={editButtonRef}>Edit</Button>\n                    <Button variant=\"danger\" onClick={() => props.deleteTask(props.id)}>Delete</Button>\n                </ButtonGroup>\n            </Form.Group>\n        </div>\n    );\n\n    useEffect(() => {\n\n        if (!wasEditing && isEditing) {\n            editFieldRef.current.focus();\n        }\n\n        if (wasEditing && !isEditing) {\n            editButtonRef.current.focus();\n        }\n\n    }, [wasEditing, isEditing]);\n\n    return <ListGroup.Item className=\"todo-item\">{isEditing ? editingTemplate : viewTemplate}</ListGroup.Item>;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,GAAG,GAAGX,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACZY,GAAG,CAACC,OAAO,GAAGH,KAAK;EACvB,CAAC,CAAC;EAEF,OAAOE,GAAG,CAACC,OAAO;AACtB,CAAC;AAAAF,EAAA,CARKF,WAAW;AAUjB,OAAO,MAAMK,QAAQ,GAAIC,KAAK,IAAK;EAAAC,GAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMmB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMqB,aAAa,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAElC,MAAMsB,UAAU,GAAGd,WAAW,CAACQ,SAAS,CAAC;EAEzC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IACxBL,UAAU,CAACK,CAAC,CAACC,MAAM,CAAChB,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMiB,YAAY,GAAIF,CAAC,IAAK;IACxBA,CAAC,CAACG,cAAc,CAAC,CAAC;IAElB,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,EAAE;MACjB;IACJ;IAEAd,KAAK,CAACe,QAAQ,CAACf,KAAK,CAACgB,EAAE,EAAEZ,OAAO,CAAC;IACjCC,UAAU,CAAC,EAAE,CAAC;IACdF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMc,eAAe,gBACjBxB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1B1B,OAAA,CAACH,IAAI;MAAC8B,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBACzB1B,OAAA,CAACH,IAAI,CAAC+B,KAAK;QAAAF,QAAA,gBACP1B,OAAA,CAACH,IAAI,CAACgC,KAAK;UAACC,OAAO,EAAEvB,KAAK,CAACgB,EAAG;UAAAG,QAAA,GAAC,eAAa,EAACnB,KAAK,CAACwB,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACrEnC,OAAA,CAACH,IAAI,CAACuC,OAAO;UACTb,EAAE,EAAEhB,KAAK,CAACgB,EAAG;UACbc,IAAI,EAAC,MAAM;UACXnC,KAAK,EAAES,OAAQ;UACf2B,QAAQ,EAAEtB,YAAa;UACvBZ,GAAG,EAAES;QAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACbnC,OAAA;QAAKyB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtB1B,OAAA,CAACJ,WAAW;UAAA8B,QAAA,gBACR1B,OAAA,CAACL,MAAM;YAAC4C,OAAO,EAAC,SAAS;YAACF,IAAI,EAAC,QAAQ;YAACG,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAAC,KAAK,CAAE;YAAAgB,QAAA,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzFnC,OAAA,CAACL,MAAM;YAAC4C,OAAO,EAAC,SAAS;YAACF,IAAI,EAAC,QAAQ;YAAAX,QAAA,EAAC;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CACR;EAED,MAAMM,YAAY,gBACdzC,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtB1B,OAAA,CAACH,IAAI,CAAC+B,KAAK;MAAAF,QAAA,gBACP1B,OAAA,CAACH,IAAI,CAAC6C,KAAK;QACPC,MAAM;QACNpB,EAAE,EAAEhB,KAAK,CAACgB,EAAG;QACbc,IAAI,EAAC,UAAU;QACfO,cAAc,EAAErC,KAAK,CAACsC,SAAU;QAChCP,QAAQ,EAAEA,CAAA,KAAM/B,KAAK,CAACuC,YAAY,CAACvC,KAAK,CAACgB,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFnC,OAAA;QAAOyB,SAAS,EAAC,YAAY;QAACK,OAAO,EAAEvB,KAAK,CAACgB,EAAG;QAAAG,QAAA,EAC3CnB,KAAK,CAACwB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACRnC,OAAA,CAACJ,WAAW;QAAC6B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAClC1B,OAAA,CAACL,MAAM;UAAC4C,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAAC,IAAI,CAAE;UAACN,GAAG,EAAEU,aAAc;UAAAY,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5FnC,OAAA,CAACL,MAAM;UAAC4C,OAAO,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAMjC,KAAK,CAACwC,UAAU,CAACxC,KAAK,CAACgB,EAAE,CAAE;UAAAG,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CACR;EAED3C,SAAS,CAAC,MAAM;IAEZ,IAAI,CAACuB,UAAU,IAAIN,SAAS,EAAE;MAC1BI,YAAY,CAACR,OAAO,CAAC2C,KAAK,CAAC,CAAC;IAChC;IAEA,IAAIjC,UAAU,IAAI,CAACN,SAAS,EAAE;MAC1BK,aAAa,CAACT,OAAO,CAAC2C,KAAK,CAAC,CAAC;IACjC;EAEJ,CAAC,EAAE,CAACjC,UAAU,EAAEN,SAAS,CAAC,CAAC;EAE3B,oBAAOT,OAAA,CAACF,SAAS,CAACmD,IAAI;IAACxB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAEjB,SAAS,GAAGe,eAAe,GAAGiB;EAAY;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC9G,CAAC;AAAA3B,GAAA,CAlFYF,QAAQ;EAAA,QAOEL,WAAW;AAAA;AAAAiD,EAAA,GAPrB5C,QAAQ;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}