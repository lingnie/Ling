{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { InteractionType } from '@azure/msal-browser';\nimport { useMsal, useMsalAuthentication } from \"@azure/msal-react\";\n\n/**\n * Custom hook to call a web API using bearer token obtained from MSAL\n * @param {PopupRequest} msalRequest \n * @returns \n */\nconst useFetchWithMsal = msalRequest => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const {\n    result,\n    error: msalError\n  } = useMsalAuthentication(InteractionType.Popup, {\n    ...msalRequest,\n    account: instance.getActiveAccount(),\n    redirectUri: '/redirect'\n  });\n\n  /**\n   * Execute a fetch request with the given options\n   * @param {string} method: GET, POST, PUT, DELETE\n   * @param {String} endpoint: The endpoint to call\n   * @param {Object} data: The data to send to the endpoint, if any \n   * @returns JSON response\n   */\n  const execute = async (method, endpoint, data = null) => {\n    if (msalError) {\n      setError(msalError);\n      return;\n    }\n    if (result) {\n      try {\n        let response = null;\n        const headers = new Headers();\n        const bearer = `Bearer ${result.accessToken}`;\n        headers.append(\"Authorization\", bearer);\n        if (data) headers.append('Content-Type', 'application/json');\n        let options = {\n          method: method,\n          headers: headers,\n          body: data ? JSON.stringify(data) : null\n        };\n        setIsLoading(true);\n        response = await (await fetch(endpoint, options)).json();\n        setData(response);\n        setIsLoading(false);\n        return response;\n      } catch (e) {\n        setError(e);\n        setIsLoading(false);\n        throw e;\n      }\n    }\n  };\n  return {\n    isLoading,\n    error,\n    data,\n    execute: useCallback(execute, [result, msalError]) // to avoid infinite calls when inside a `useEffect`\n  };\n};\n_s(useFetchWithMsal, \"52mvK6olDHKRY0TW8U3W0FnltHM=\", false, function () {\n  return [useMsal, useMsalAuthentication];\n});\nexport default useFetchWithMsal;","map":{"version":3,"names":["useState","useCallback","InteractionType","useMsal","useMsalAuthentication","useFetchWithMsal","msalRequest","_s","instance","isLoading","setIsLoading","error","setError","data","setData","result","msalError","Popup","account","getActiveAccount","redirectUri","execute","method","endpoint","response","headers","Headers","bearer","accessToken","append","options","body","JSON","stringify","fetch","json","e"],"sources":["/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/src/hooks/useFetchWithMsal.jsx"],"sourcesContent":["import {\n    useState,\n    useCallback,\n} from 'react';\n\nimport { InteractionType } from '@azure/msal-browser';\nimport { useMsal, useMsalAuthentication } from \"@azure/msal-react\";\n\n/**\n * Custom hook to call a web API using bearer token obtained from MSAL\n * @param {PopupRequest} msalRequest \n * @returns \n */\nconst useFetchWithMsal = (msalRequest) => {\n    const { instance } = useMsal();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(null);\n\n    const { result, error: msalError } = useMsalAuthentication(InteractionType.Popup, {\n        ...msalRequest,\n        account: instance.getActiveAccount(),\n        redirectUri: '/redirect'\n    });\n\n    /**\n     * Execute a fetch request with the given options\n     * @param {string} method: GET, POST, PUT, DELETE\n     * @param {String} endpoint: The endpoint to call\n     * @param {Object} data: The data to send to the endpoint, if any \n     * @returns JSON response\n     */\n    const execute = async (method, endpoint, data = null) => {\n        if (msalError) {\n            setError(msalError);\n            return;\n        }\n\n        if (result) {\n            try {\n                let response = null;\n\n                const headers = new Headers();\n                const bearer = `Bearer ${result.accessToken}`;            \n                headers.append(\"Authorization\", bearer);\n\n                if (data) headers.append('Content-Type', 'application/json');\n\n                let options = {\n                    method: method,\n                    headers: headers,\n                    body: data ? JSON.stringify(data) : null,\n                };\n\n                setIsLoading(true);\n\n                response = await (await fetch(endpoint, options)).json();\n                setData(response);\n\n                setIsLoading(false);\n                return response;\n            } catch (e) {\n                setError(e);\n                setIsLoading(false);\n                throw e;\n            }\n        }\n    };\n\n    return {\n        isLoading,\n        error,\n        data,\n        execute: useCallback(execute, [result, msalError]), // to avoid infinite calls when inside a `useEffect`\n    };\n};\n\nexport default useFetchWithMsal;"],"mappings":";AAAA,SACIA,QAAQ,EACRC,WAAW,QACR,OAAO;AAEd,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,OAAO,EAAEC,qBAAqB,QAAQ,mBAAmB;;AAElE;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAS,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM;IAAEe,MAAM;IAAEJ,KAAK,EAAEK;EAAU,CAAC,GAAGZ,qBAAqB,CAACF,eAAe,CAACe,KAAK,EAAE;IAC9E,GAAGX,WAAW;IACdY,OAAO,EAAEV,QAAQ,CAACW,gBAAgB,CAAC,CAAC;IACpCC,WAAW,EAAE;EACjB,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,OAAO,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEV,IAAI,GAAG,IAAI,KAAK;IACrD,IAAIG,SAAS,EAAE;MACXJ,QAAQ,CAACI,SAAS,CAAC;MACnB;IACJ;IAEA,IAAID,MAAM,EAAE;MACR,IAAI;QACA,IAAIS,QAAQ,GAAG,IAAI;QAEnB,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;QAC7B,MAAMC,MAAM,GAAG,UAAUZ,MAAM,CAACa,WAAW,EAAE;QAC7CH,OAAO,CAACI,MAAM,CAAC,eAAe,EAAEF,MAAM,CAAC;QAEvC,IAAId,IAAI,EAAEY,OAAO,CAACI,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;QAE5D,IAAIC,OAAO,GAAG;UACVR,MAAM,EAAEA,MAAM;UACdG,OAAO,EAAEA,OAAO;UAChBM,IAAI,EAAElB,IAAI,GAAGmB,IAAI,CAACC,SAAS,CAACpB,IAAI,CAAC,GAAG;QACxC,CAAC;QAEDH,YAAY,CAAC,IAAI,CAAC;QAElBc,QAAQ,GAAG,MAAM,CAAC,MAAMU,KAAK,CAACX,QAAQ,EAAEO,OAAO,CAAC,EAAEK,IAAI,CAAC,CAAC;QACxDrB,OAAO,CAACU,QAAQ,CAAC;QAEjBd,YAAY,CAAC,KAAK,CAAC;QACnB,OAAOc,QAAQ;MACnB,CAAC,CAAC,OAAOY,CAAC,EAAE;QACRxB,QAAQ,CAACwB,CAAC,CAAC;QACX1B,YAAY,CAAC,KAAK,CAAC;QACnB,MAAM0B,CAAC;MACX;IACJ;EACJ,CAAC;EAED,OAAO;IACH3B,SAAS;IACTE,KAAK;IACLE,IAAI;IACJQ,OAAO,EAAEpB,WAAW,CAACoB,OAAO,EAAE,CAACN,MAAM,EAAEC,SAAS,CAAC,CAAC,CAAE;EACxD,CAAC;AACL,CAAC;AAACT,EAAA,CA9DIF,gBAAgB;EAAA,QACGF,OAAO,EAKSC,qBAAqB;AAAA;AA0D9D,eAAeC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}