{"ast":null,"code":"/*! @azure/msal-browser v2.31.0 2022-11-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, AuthError } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar BrowserAuthErrorMessage = {\n  pkceNotGenerated: {\n    code: \"pkce_not_created\",\n    desc: \"The PKCE code challenge and verifier could not be generated.\"\n  },\n  cryptoDoesNotExist: {\n    code: \"crypto_nonexistent\",\n    desc: \"The crypto object or function is not available.\"\n  },\n  httpMethodNotImplementedError: {\n    code: \"http_method_not_implemented\",\n    desc: \"The HTTP method given has not been implemented in this library.\"\n  },\n  emptyNavigateUriError: {\n    code: \"empty_navigate_uri\",\n    desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n  },\n  hashEmptyError: {\n    code: \"hash_empty_error\",\n    desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  hashDoesNotContainStateError: {\n    code: \"no_state_in_hash\",\n    desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n  },\n  hashDoesNotContainKnownPropertiesError: {\n    code: \"hash_does_not_contain_known_properties\",\n    desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  unableToParseStateError: {\n    code: \"unable_to_parse_state\",\n    desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n  },\n  stateInteractionTypeMismatchError: {\n    code: \"state_interaction_type_mismatch\",\n    desc: \"Hash contains state but the interaction type does not match the caller.\"\n  },\n  interactionInProgress: {\n    code: \"interaction_in_progress\",\n    desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  popupWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  emptyWindowError: {\n    code: \"empty_window_error\",\n    desc: \"window.open returned null or undefined window object.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  monitorPopupTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  monitorIframeTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  redirectInIframeError: {\n    code: \"redirect_in_iframe\",\n    desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n  },\n  blockTokenRequestsInHiddenIframeError: {\n    code: \"block_iframe_reload\",\n    desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  blockAcquireTokenInPopupsError: {\n    code: \"block_nested_popups\",\n    desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n  },\n  iframeClosedPrematurelyError: {\n    code: \"iframe_closed_prematurely\",\n    desc: \"The iframe being monitored was closed prematurely.\"\n  },\n  silentLogoutUnsupportedError: {\n    code: \"silent_logout_unsupported\",\n    desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n  },\n  noAccountError: {\n    code: \"no_account_error\",\n    desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n  },\n  silentPromptValueError: {\n    code: \"silent_prompt_value_error\",\n    desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\n  },\n  noTokenRequestCacheError: {\n    code: \"no_token_request_cache_error\",\n    desc: \"No token request found in cache.\"\n  },\n  unableToParseTokenRequestCacheError: {\n    code: \"unable_to_parse_token_request_cache_error\",\n    desc: \"The cached token request could not be parsed.\"\n  },\n  noCachedAuthorityError: {\n    code: \"no_cached_authority_error\",\n    desc: \"No cached authority found.\"\n  },\n  authRequestNotSet: {\n    code: \"auth_request_not_set_error\",\n    desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  },\n  notInBrowserEnvironment: {\n    code: \"non_browser_environment\",\n    desc: \"Login and token requests are not supported in non-browser environments.\"\n  },\n  databaseNotOpen: {\n    code: \"database_not_open\",\n    desc: \"Database is not open!\"\n  },\n  noNetworkConnectivity: {\n    code: \"no_network_connectivity\",\n    desc: \"No network connectivity. Check your internet connection.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n  },\n  getRequestFailed: {\n    code: \"get_request_failed\",\n    desc: \"Network request failed. Please check the network trace to determine root cause.\"\n  },\n  failedToParseNetworkResponse: {\n    code: \"failed_to_parse_response\",\n    desc: \"Failed to parse network response. Check network trace.\"\n  },\n  unableToLoadTokenError: {\n    code: \"unable_to_load_token\",\n    desc: \"Error loading token to cache.\"\n  },\n  signingKeyNotFoundInStorage: {\n    code: \"crypto_key_not_found\",\n    desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n  },\n  authCodeRequired: {\n    code: \"auth_code_required\",\n    desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n  },\n  authCodeOrNativeAccountRequired: {\n    code: \"auth_code_or_nativeAccountId_required\",\n    desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n  },\n  databaseUnavailable: {\n    code: \"database_unavailable\",\n    desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n  },\n  unableToAcquireTokenFromNativePlatform: {\n    code: \"unable_to_acquire_token_from_native_platform\",\n    desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeHandshakeTimeout: {\n    code: \"native_handshake_timeout\",\n    desc: \"Timed out while attempting to establish connection to browser extension\"\n  },\n  nativeExtensionNotInstalled: {\n    code: \"native_extension_not_installed\",\n    desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n  },\n  nativeConnectionNotEstablished: {\n    code: \"native_connection_not_established\",\n    desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeBrokerCalledBeforeInitialize: {\n    code: \"native_broker_called_before_initialize\",\n    desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativePromptNotSupported: {\n    code: \"native_prompt_not_supported\",\n    desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\nvar BrowserAuthError = /** @class */function (_super) {\n  __extends(BrowserAuthError, _super);\n  function BrowserAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    Object.setPrototypeOf(_this, BrowserAuthError.prototype);\n    _this.name = \"BrowserAuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when PKCE is not implemented.\r\n   * @param errDetail\r\n   */\n  BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when the crypto object is unavailable.\r\n   * @param errDetail\r\n   */\n  BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n   * @param method\r\n   */\n  BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\n  };\n  /**\r\n   * Creates an error thrown when the navigation URI is empty.\r\n   */\n  BrowserAuthError.createEmptyNavigationUriError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   * @param hashValue\r\n   */\n  BrowserAuthError.createEmptyHashError = function (hashValue) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n  BrowserAuthError.createHashDoesNotContainStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value does not contain known properties\r\n   */\n  BrowserAuthError.createHashDoesNotContainKnownPropertiesError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n  BrowserAuthError.createUnableToParseStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n   */\n  BrowserAuthError.createStateInteractionTypeMismatchError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n   */\n  BrowserAuthError.createInteractionInProgressError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n  };\n  /**\r\n   * Creates an error thrown when the popup window could not be opened.\r\n   * @param errDetail\r\n   */\n  BrowserAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n    errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\n    return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n  };\n  /**\r\n   * Creates an error thrown when window.open returns an empty window object.\r\n   * @param errDetail\r\n   */\n  BrowserAuthError.createEmptyWindowCreatedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the user closes a popup.\r\n   */\n  BrowserAuthError.createUserCancelledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n   */\n  BrowserAuthError.createMonitorPopupTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n   */\n  BrowserAuthError.createMonitorIframeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\r\n   * @param windowParentCheck\r\n   */\n  BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\n  };\n  /**\r\n   * Creates an error thrown when an auth reload is done inside an iframe.\r\n   */\n  BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a popup attempts to call an acquireToken API\r\n   * @returns\r\n   */\n  BrowserAuthError.createBlockAcquireTokenInPopupsError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n  };\n  /**\r\n   * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n   */\n  BrowserAuthError.createIframeClosedPrematurelyError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n   */\n  BrowserAuthError.createSilentLogoutUnsupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n   */\n  BrowserAuthError.createNoAccountError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n   */\n  BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\n  };\n  /**\r\n   * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n   */\n  BrowserAuthError.createUnableToParseTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the token request could not be retrieved from the cache\r\n   */\n  BrowserAuthError.createNoTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n   */\n  BrowserAuthError.createAuthRequestNotSetError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the authority could not be retrieved from the cache\r\n   */\n  BrowserAuthError.createNoCachedAuthorityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n  };\n  /**\r\n   * Creates an error thrown if cache type is invalid.\r\n   */\n  BrowserAuthError.createInvalidCacheTypeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\n  };\n  /**\r\n   * Create an error thrown when login and token requests are made from a non-browser environment\r\n   */\n  BrowserAuthError.createNonBrowserEnvironmentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n  };\n  /**\r\n   * Create an error thrown when indexDB database is not open\r\n   */\n  BrowserAuthError.createDatabaseNotOpenError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to no internet\r\n   */\n  BrowserAuthError.createNoNetworkConnectivityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n   */\n  BrowserAuthError.createPostRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, BrowserAuthErrorMessage.postRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n   */\n  BrowserAuthError.createGetRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, BrowserAuthErrorMessage.getRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when network client fails to parse network response\r\n   */\n  BrowserAuthError.createFailedToParseNetworkResponseError = function (endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, BrowserAuthErrorMessage.failedToParseNetworkResponse.desc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when the necessary information is not available to sideload tokens\r\n   */\n  BrowserAuthError.createUnableToLoadTokenError = function (errorDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, BrowserAuthErrorMessage.unableToLoadTokenError.desc + \" | \" + errorDetail);\n  };\n  /**\r\n   * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n   */\n  BrowserAuthError.createSigningKeyNotFoundInStorageError = function (keyId) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc + \" | No match found for KeyId: \" + keyId);\n  };\n  /**\r\n   * Create an error when an authorization code is required but not provided\r\n   */\n  BrowserAuthError.createAuthCodeRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n  };\n  /**\r\n   * Create an error when an authorization code or native account ID is required but not provided\r\n   */\n  BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n  };\n  /**\r\n   * Create an error when IndexedDB is unavailable\r\n   */\n  BrowserAuthError.createDatabaseUnavailableError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n  };\n  /**\r\n   * Create an error when native token acquisition is not possible\r\n   */\n  BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n  };\n  /**\r\n   * Create an error thrown when Handshake with browser extension times out\r\n   */\n  BrowserAuthError.createNativeHandshakeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n  };\n  /**\r\n   * Create an error thrown when browser extension is not installed\r\n   */\n  BrowserAuthError.createNativeExtensionNotInstalledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n  };\n  /**\r\n   * Create an error when native connection has not been established\r\n   * @returns\r\n   */\n  BrowserAuthError.createNativeConnectionNotEstablishedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n  };\n  /**\r\n   * Create an error thrown when the initialize function hasn't been called\r\n   */\n  BrowserAuthError.createNativeBrokerCalledBeforeInitialize = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n  };\n  /**\r\n   * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\r\n   * These requests must go through eSTS to ensure eSTS is aware of the new account\r\n   */\n  BrowserAuthError.createNativePromptParameterNotSupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n  };\n  return BrowserAuthError;\n}(AuthError);\nexport { BrowserAuthError, BrowserAuthErrorMessage };","map":{"version":3,"names":["BrowserAuthErrorMessage","pkceNotGenerated","code","desc","cryptoDoesNotExist","httpMethodNotImplementedError","emptyNavigateUriError","hashEmptyError","hashDoesNotContainStateError","hashDoesNotContainKnownPropertiesError","unableToParseStateError","stateInteractionTypeMismatchError","interactionInProgress","popupWindowError","emptyWindowError","userCancelledError","monitorPopupTimeoutError","monitorIframeTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","blockAcquireTokenInPopupsError","iframeClosedPrematurelyError","silentLogoutUnsupportedError","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSet","invalidCacheType","notInBrowserEnvironment","databaseNotOpen","noNetworkConnectivity","postRequestFailed","getRequestFailed","failedToParseNetworkResponse","unableToLoadTokenError","signingKeyNotFoundInStorage","authCodeRequired","authCodeOrNativeAccountRequired","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","nativeBrokerCalledBeforeInitialize","nativePromptNotSupported","__extends","BrowserAuthError","_super","errorCode","errorMessage","_this","call","Object","setPrototypeOf","prototype","name","createPkceNotGeneratedError","errDetail","createCryptoNotAvailableError","createHttpMethodNotImplementedError","method","createEmptyNavigationUriError","createEmptyHashError","hashValue","createHashDoesNotContainStateError","createHashDoesNotContainKnownPropertiesError","createUnableToParseStateError","createStateInteractionTypeMismatchError","createInteractionInProgressError","createPopupWindowError","StringUtils","isEmpty","createEmptyWindowCreatedError","createUserCancelledError","createMonitorPopupTimeoutError","createMonitorIframeTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createBlockAcquireTokenInPopupsError","createIframeClosedPrematurelyError","createSilentLogoutUnsupportedError","createNoAccountError","createSilentPromptValueError","givenPrompt","createUnableToParseTokenRequestCacheError","createNoTokenRequestCacheError","createAuthRequestNotSetError","createNoCachedAuthorityError","createInvalidCacheTypeError","createNonBrowserEnvironmentError","createDatabaseNotOpenError","createNoNetworkConnectivityError","createPostRequestFailedError","errorDesc","endpoint","split","createGetRequestFailedError","createFailedToParseNetworkResponseError","createUnableToLoadTokenError","errorDetail","createSigningKeyNotFoundInStorageError","keyId","createAuthCodeRequiredError","createAuthCodeOrNativeAccountIdRequiredError","createDatabaseUnavailableError","createUnableToAcquireTokenFromNativePlatformError","createNativeHandshakeTimeoutError","createNativeExtensionNotInstalledError","createNativeConnectionNotEstablishedError","createNativeBrokerCalledBeforeInitialize","createNativePromptParameterNotSupportedError","AuthError"],"sources":["/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\"\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\"\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    hashDoesNotContainStateError: {\n        code: \"no_state_in_hash\",\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: \"hash_does_not_contain_known_properties\",\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    unableToParseStateError: {\n        code: \"unable_to_parse_state\",\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n    },\n    stateInteractionTypeMismatchError: {\n        code: \"state_interaction_type_mismatch\",\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    popupWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    monitorPopupTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    monitorIframeTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: \"block_iframe_reload\",\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    blockAcquireTokenInPopupsError: {\n        code: \"block_nested_popups\",\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n    },\n    iframeClosedPrematurelyError: {\n        code: \"iframe_closed_prematurely\",\n        desc: \"The iframe being monitored was closed prematurely.\"\n    },\n    silentLogoutUnsupportedError: {\n        code: \"silent_logout_unsupported\",\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n    },\n    noAccountError: {\n        code: \"no_account_error\",\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n    },\n    silentPromptValueError: {\n        code: \"silent_prompt_value_error\",\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\n    },\n    noTokenRequestCacheError: {\n        code: \"no_token_request_cache_error\",\n        desc: \"No token request found in cache.\"\n    },\n    unableToParseTokenRequestCacheError: {\n        code: \"unable_to_parse_token_request_cache_error\",\n        desc: \"The cached token request could not be parsed.\"\n    },\n    noCachedAuthorityError: {\n        code: \"no_cached_authority_error\",\n        desc: \"No cached authority found.\"\n    },\n    authRequestNotSet: {\n        code: \"auth_request_not_set_error\",\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    notInBrowserEnvironment: {\n        code: \"non_browser_environment\",\n        desc: \"Login and token requests are not supported in non-browser environments.\"\n    },\n    databaseNotOpen: {\n        code: \"database_not_open\",\n        desc: \"Database is not open!\"\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\"\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n    },\n    getRequestFailed: {\n        code: \"get_request_failed\",\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\n    },\n    failedToParseNetworkResponse: {\n        code: \"failed_to_parse_response\",\n        desc: \"Failed to parse network response. Check network trace.\"\n    },\n    unableToLoadTokenError: {\n        code: \"unable_to_load_token\",\n        desc: \"Error loading token to cache.\"\n    },\n    signingKeyNotFoundInStorage: {\n        code: \"crypto_key_not_found\",\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n    },\n    authCodeRequired: {\n        code: \"auth_code_required\",\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n    },\n    authCodeOrNativeAccountRequired: {\n        code: \"auth_code_or_nativeAccountId_required\",\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n    },\n    databaseUnavailable: {\n        code: \"database_unavailable\",\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: \"unable_to_acquire_token_from_native_platform\",\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeHandshakeTimeout: {\n        code: \"native_handshake_timeout\",\n        desc: \"Timed out while attempting to establish connection to browser extension\"\n    },\n    nativeExtensionNotInstalled: {\n        code: \"native_extension_not_installed\",\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n    },\n    nativeConnectionNotEstablished: {\n        code: \"native_connection_not_established\",\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativeBrokerCalledBeforeInitialize: {\n        code: \"native_broker_called_before_initialize\",\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n    },\n    nativePromptNotSupported: {\n        code: \"native_prompt_not_supported\",\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail\n     */\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail\n     */\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method\n     */\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue\n     */\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createHashDoesNotContainStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value does not contain known properties\n     */\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createUnableToParseStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\n     */\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail\n     */\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail\n     */\n    static createEmptyWindowCreatedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\n            BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\n     */\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\n     */\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\n     * @param windowParentCheck\n     */\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code,\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n\n    /**\n     * Creates an error thrown when an auth reload is done inside an iframe.\n     */\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a popup attempts to call an acquireToken API\n     * @returns\n     */\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code,\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n    }\n\n    /**\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\n     */\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\n     */\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\n     */\n    static createNoAccountError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\n     */\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\n    }\n\n    /**\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\n     */\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the token request could not be retrieved from the cache\n     */\n    static createNoTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\n     */\n    static createAuthRequestNotSetError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the authority could not be retrieved from the cache\n     */\n    static createNoCachedAuthorityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n    }\n\n    /**\n     * Creates an error thrown if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Create an error thrown when login and token requests are made from a non-browser environment\n     */\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n    }\n\n    /**\n     * Create an error thrown when indexDB database is not open\n     */\n    static createDatabaseNotOpenError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to no internet\n     */\n    static createNoNetworkConnectivityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\n     */\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\n     */\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when network client fails to parse network response\n     */\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when the necessary information is not available to sideload tokens\n     */\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\n    }\n\n    /**\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\n     */\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\n    }\n\n    /**\n     * Create an error when an authorization code is required but not provided\n     */\n    static createAuthCodeRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n    }\n\n    /**\n     * Create an error when an authorization code or native account ID is required but not provided\n     */\n    static createAuthCodeOrNativeAccountIdRequiredError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n    }\n\n    /**\n     * Create an error when IndexedDB is unavailable\n     */\n    static createDatabaseUnavailableError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n    }\n\n    /**\n     * Create an error when native token acquisition is not possible\n     */\n    static createUnableToAcquireTokenFromNativePlatformError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n    }\n\n    /**\n     * Create an error thrown when Handshake with browser extension times out\n     */\n    static createNativeHandshakeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n    }\n\n    /**\n     * Create an error thrown when browser extension is not installed\n     */\n    static createNativeExtensionNotInstalledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n    }\n\n    /**\n     * Create an error when native connection has not been established\n     * @returns\n     */\n    static createNativeConnectionNotEstablishedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n    }\n\n    /**\n     * Create an error thrown when the initialize function hasn't been called\n     */\n    static createNativeBrokerCalledBeforeInitialize(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n    }\n\n    /**\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\n     */\n    static createNativePromptParameterNotSupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n    }\n}\n"],"mappings":";;;;;;AAAA;;;;AAOA;;;IAGaA,uBAAuB,GAAG;EACnCC,gBAAgB,EAAE;IACdC,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;GACT;EACDC,kBAAkB,EAAE;IAChBF,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDE,6BAA6B,EAAE;IAC3BH,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;GACT;EACDG,qBAAqB,EAAE;IACnBJ,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDI,cAAc,EAAE;IACZL,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;GACT;EACDK,4BAA4B,EAAE;IAC1BN,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;GACT;EACDM,sCAAsC,EAAE;IACpCP,IAAI,EAAE,wCAAwC;IAC9CC,IAAI,EAAE;GACT;EACDO,uBAAuB,EAAE;IACrBR,IAAI,EAAE,uBAAuB;IAC7BC,IAAI,EAAE;GACT;EACDQ,iCAAiC,EAAE;IAC/BT,IAAI,EAAE,iCAAiC;IACvCC,IAAI,EAAE;GACT;EACDS,qBAAqB,EAAE;IACnBV,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;GACT;EACDU,gBAAgB,EAAE;IACdX,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDW,gBAAgB,EAAE;IACdZ,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDY,kBAAkB,EAAE;IAChBb,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE;GACT;EACDa,wBAAwB,EAAE;IACtBd,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;GACT;EACDc,yBAAyB,EAAE;IACvBf,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;GACT;EACDe,qBAAqB,EAAE;IACnBhB,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDgB,qCAAqC,EAAE;IACnCjB,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;GACT;EACDiB,8BAA8B,EAAE;IAC5BlB,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;GACT;EACDkB,4BAA4B,EAAE;IAC1BnB,IAAI,EAAE,2BAA2B;IACjCC,IAAI,EAAE;GACT;EACDmB,4BAA4B,EAAE;IAC1BpB,IAAI,EAAE,2BAA2B;IACjCC,IAAI,EAAE;GACT;EACDoB,cAAc,EAAE;IACZrB,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;GACT;EACDqB,sBAAsB,EAAE;IACpBtB,IAAI,EAAE,2BAA2B;IACjCC,IAAI,EAAE;GACT;EACDsB,wBAAwB,EAAE;IACtBvB,IAAI,EAAE,8BAA8B;IACpCC,IAAI,EAAE;GACT;EACDuB,mCAAmC,EAAE;IACjCxB,IAAI,EAAE,2CAA2C;IACjDC,IAAI,EAAE;GACT;EACDwB,sBAAsB,EAAE;IACpBzB,IAAI,EAAE,2BAA2B;IACjCC,IAAI,EAAE;GACT;EACDyB,iBAAiB,EAAE;IACf1B,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE;GACT;EACD0B,gBAAgB,EAAE;IACd3B,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACD2B,uBAAuB,EAAE;IACrB5B,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;GACT;EACD4B,eAAe,EAAE;IACb7B,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;GACT;EACD6B,qBAAqB,EAAE;IACnB9B,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;GACT;EACD8B,iBAAiB,EAAE;IACf/B,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;GACT;EACD+B,gBAAgB,EAAE;IACdhC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDgC,4BAA4B,EAAE;IAC1BjC,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE;GACT;EACDiC,sBAAsB,EAAE;IACpBlC,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;GACT;EACDkC,2BAA2B,EAAE;IACzBnC,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;GACT;EACDmC,gBAAgB,EAAE;IACdpC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;GACT;EACDoC,+BAA+B,EAAE;IAC7BrC,IAAI,EAAE,uCAAuC;IAC7CC,IAAI,EAAE;GACT;EACDqC,mBAAmB,EAAE;IACjBtC,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;GACT;EACDsC,sCAAsC,EAAE;IACpCvC,IAAI,EAAE,8CAA8C;IACpDC,IAAI,EAAE;GACT;EACDuC,sBAAsB,EAAE;IACpBxC,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE;GACT;EACDwC,2BAA2B,EAAE;IACzBzC,IAAI,EAAE,gCAAgC;IACtCC,IAAI,EAAE;GACT;EACDyC,8BAA8B,EAAE;IAC5B1C,IAAI,EAAE,mCAAmC;IACzCC,IAAI,EAAE;GACT;EACD0C,kCAAkC,EAAE;IAChC3C,IAAI,EAAE,wCAAwC;IAC9CC,IAAI,EAAE;GACT;EACD2C,wBAAwB,EAAE;IACtB5C,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;;;AAId;;;;EAGsC4C,SAAA,CAAAC,gBAAA,EAAAC,MAAA;EAElC,SAAAD,iBAAYE,SAAiB,EAAEC,YAAqB;IAApD,IAAAC,KAAA,GACIH,MAAA,CAAAI,IAAA,OAAMH,SAAS,EAAEC,YAAY,CAAC;IAE9BG,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEJ,gBAAgB,CAACQ,SAAS,CAAC;IACvDJ,KAAI,CAACK,IAAI,GAAG,kBAAkB;;;;;;;EAO3BT,gBAAA,CAAAU,2BAA2B,GAAlC,UAAmCC,SAAiB;IAChD,OAAO,IAAIX,gBAAgB,CAAChD,uBAAuB,CAACC,gBAAgB,CAACC,IAAI,EAClEF,uBAAuB,CAACC,gBAAgB,CAACE,IAAI,gBAAWwD,SAAW,CAAC;GAC9E;;;;;EAMMX,gBAAA,CAAAY,6BAA6B,GAApC,UAAqCD,SAAiB;IAClD,OAAO,IAAIX,gBAAgB,CAAChD,uBAAuB,CAACI,kBAAkB,CAACF,IAAI,EACpEF,uBAAuB,CAACI,kBAAkB,CAACD,IAAI,gBAAWwD,SAAW,CAAC;GAChF;;;;;EAMMX,gBAAA,CAAAa,mCAAmC,GAA1C,UAA2CC,MAAc;IACrD,OAAO,IAAId,gBAAgB,CAAChD,uBAAuB,CAACK,6BAA6B,CAACH,IAAI,EAC/EF,uBAAuB,CAACK,6BAA6B,CAACF,IAAI,uBAAkB2D,MAAQ,CAAC;GAC/F;;;;EAKMd,gBAAA,CAAAe,6BAA6B,GAApC;IACI,OAAO,IAAIf,gBAAgB,CAAChD,uBAAuB,CAACM,qBAAqB,CAACJ,IAAI,EAAEF,uBAAuB,CAACM,qBAAqB,CAACH,IAAI,CAAC;GACtI;;;;;EAMM6C,gBAAA,CAAAgB,oBAAoB,GAA3B,UAA4BC,SAAiB;IACzC,OAAO,IAAIjB,gBAAgB,CAAChD,uBAAuB,CAACO,cAAc,CAACL,IAAI,EAAKF,uBAAuB,CAACO,cAAc,CAACJ,IAAI,oBAAe8D,SAAW,CAAC;GACrJ;;;;EAKMjB,gBAAA,CAAAkB,kCAAkC,GAAzC;IACI,OAAO,IAAIlB,gBAAgB,CAAChD,uBAAuB,CAACQ,4BAA4B,CAACN,IAAI,EAAEF,uBAAuB,CAACQ,4BAA4B,CAACL,IAAI,CAAC;GACpJ;;;;EAKM6C,gBAAA,CAAAmB,4CAA4C,GAAnD;IACI,OAAO,IAAInB,gBAAgB,CAAChD,uBAAuB,CAACS,sCAAsC,CAACP,IAAI,EAAEF,uBAAuB,CAACS,sCAAsC,CAACN,IAAI,CAAC;GACxK;;;;EAKM6C,gBAAA,CAAAoB,6BAA6B,GAApC;IACI,OAAO,IAAIpB,gBAAgB,CAAChD,uBAAuB,CAACU,uBAAuB,CAACR,IAAI,EAAEF,uBAAuB,CAACU,uBAAuB,CAACP,IAAI,CAAC;GAC1I;;;;EAKM6C,gBAAA,CAAAqB,uCAAuC,GAA9C;IACI,OAAO,IAAIrB,gBAAgB,CAAChD,uBAAuB,CAACW,iCAAiC,CAACT,IAAI,EAAEF,uBAAuB,CAACW,iCAAiC,CAACR,IAAI,CAAC;GAC9J;;;;EAKM6C,gBAAA,CAAAsB,gCAAgC,GAAvC;IACI,OAAO,IAAItB,gBAAgB,CAAChD,uBAAuB,CAACY,qBAAqB,CAACV,IAAI,EAAEF,uBAAuB,CAACY,qBAAqB,CAACT,IAAI,CAAC;GACtI;;;;;EAMM6C,gBAAA,CAAAuB,sBAAsB,GAA7B,UAA8BZ,SAAkB;IAC5C,IAAIR,YAAY,GAAGnD,uBAAuB,CAACa,gBAAgB,CAACV,IAAI;IAChEgD,YAAY,GAAG,CAACqB,WAAW,CAACC,OAAO,CAACd,SAAS,CAAC,GAAMR,YAAY,kBAAaQ,SAAW,GAAGR,YAAY;IACvG,OAAO,IAAIH,gBAAgB,CAAChD,uBAAuB,CAACa,gBAAgB,CAACX,IAAI,EAAEiD,YAAY,CAAC;GAC3F;;;;;EAMMH,gBAAA,CAAA0B,6BAA6B,GAApC;IACI,OAAO,IAAI1B,gBAAgB,CAAChD,uBAAuB,CAACc,gBAAgB,CAACZ,IAAI,EAAEF,uBAAuB,CAACc,gBAAgB,CAACX,IAAI,CAAC;GAC5H;;;;EAKM6C,gBAAA,CAAA2B,wBAAwB,GAA/B;IACI,OAAO,IAAI3B,gBAAgB,CAAChD,uBAAuB,CAACe,kBAAkB,CAACb,IAAI,EACvEF,uBAAuB,CAACe,kBAAkB,CAACZ,IAAI,CAAC;GACvD;;;;EAKM6C,gBAAA,CAAA4B,8BAA8B,GAArC;IACI,OAAO,IAAI5B,gBAAgB,CAAChD,uBAAuB,CAACgB,wBAAwB,CAACd,IAAI,EAC7EF,uBAAuB,CAACgB,wBAAwB,CAACb,IAAI,CAAC;GAC7D;;;;EAKM6C,gBAAA,CAAA6B,+BAA+B,GAAtC;IACI,OAAO,IAAI7B,gBAAgB,CAAChD,uBAAuB,CAACiB,yBAAyB,CAACf,IAAI,EAC9EF,uBAAuB,CAACiB,yBAAyB,CAACd,IAAI,CAAC;GAC9D;;;;;EAMM6C,gBAAA,CAAA8B,2BAA2B,GAAlC,UAAmCC,iBAA0B;IACzD,OAAO,IAAI/B,gBAAgB,CAAChD,uBAAuB,CAACkB,qBAAqB,CAAChB,IAAI,EACvEF,uBAAuB,CAACkB,qBAAqB,CAACf,IAAI,uCAAkC4E,iBAAmB,CAAC;GAClH;;;;EAKM/B,gBAAA,CAAAgC,oCAAoC,GAA3C;IACI,OAAO,IAAIhC,gBAAgB,CAAChD,uBAAuB,CAACmB,qCAAqC,CAACjB,IAAI,EAC1FF,uBAAuB,CAACmB,qCAAqC,CAAChB,IAAI,CAAC;GAC1E;;;;;EAMM6C,gBAAA,CAAAiC,oCAAoC,GAA3C;IACI,OAAO,IAAIjC,gBAAgB,CAAChD,uBAAuB,CAACoB,8BAA8B,CAAClB,IAAI,EACnFF,uBAAuB,CAACoB,8BAA8B,CAACjB,IAAI,CAAC;GACnE;;;;EAKM6C,gBAAA,CAAAkC,kCAAkC,GAAzC;IACI,OAAO,IAAIlC,gBAAgB,CAAChD,uBAAuB,CAACqB,4BAA4B,CAACnB,IAAI,EAAEF,uBAAuB,CAACqB,4BAA4B,CAAClB,IAAI,CAAC;GACpJ;;;;EAKM6C,gBAAA,CAAAmC,kCAAkC,GAAzC;IACI,OAAO,IAAInC,gBAAgB,CAAChD,uBAAuB,CAACsB,4BAA4B,CAACpB,IAAI,EAAEF,uBAAuB,CAACsB,4BAA4B,CAACnB,IAAI,CAAC;GACpJ;;;;EAKM6C,gBAAA,CAAAoC,oBAAoB,GAA3B;IACI,OAAO,IAAIpC,gBAAgB,CAAChD,uBAAuB,CAACuB,cAAc,CAACrB,IAAI,EAAEF,uBAAuB,CAACuB,cAAc,CAACpB,IAAI,CAAC;GACxH;;;;EAKM6C,gBAAA,CAAAqC,4BAA4B,GAAnC,UAAoCC,WAAmB;IACnD,OAAO,IAAItC,gBAAgB,CAAChD,uBAAuB,CAACwB,sBAAsB,CAACtB,IAAI,EAAKF,uBAAuB,CAACwB,sBAAsB,CAACrB,IAAI,sBAAiBmF,WAAa,CAAC;GACzK;;;;EAKMtC,gBAAA,CAAAuC,yCAAyC,GAAhD;IACI,OAAO,IAAIvC,gBAAgB,CAAChD,uBAAuB,CAAC0B,mCAAmC,CAACxB,IAAI,EACxFF,uBAAuB,CAAC0B,mCAAmC,CAACvB,IAAI,CAAC;GACxE;;;;EAKM6C,gBAAA,CAAAwC,8BAA8B,GAArC;IACI,OAAO,IAAIxC,gBAAgB,CAAChD,uBAAuB,CAACyB,wBAAwB,CAACvB,IAAI,EAC7EF,uBAAuB,CAACyB,wBAAwB,CAACtB,IAAI,CAAC;GAC7D;;;;EAKM6C,gBAAA,CAAAyC,4BAA4B,GAAnC;IACI,OAAO,IAAIzC,gBAAgB,CAAChD,uBAAuB,CAAC4B,iBAAiB,CAAC1B,IAAI,EACtEF,uBAAuB,CAAC4B,iBAAiB,CAACzB,IAAI,CAAC;GACtD;;;;EAKM6C,gBAAA,CAAA0C,4BAA4B,GAAnC;IACI,OAAO,IAAI1C,gBAAgB,CAAChD,uBAAuB,CAAC2B,sBAAsB,CAACzB,IAAI,EAC3EF,uBAAuB,CAAC2B,sBAAsB,CAACxB,IAAI,CAAC;GAC3D;;;;EAKM6C,gBAAA,CAAA2C,2BAA2B,GAAlC;IACI,OAAO,IAAI3C,gBAAgB,CAAChD,uBAAuB,CAAC6B,gBAAgB,CAAC3B,IAAI,EAAE,KAAGF,uBAAuB,CAAC6B,gBAAgB,CAAC1B,IAAM,CAAC;GACjI;;;;EAKM6C,gBAAA,CAAA4C,gCAAgC,GAAvC;IACI,OAAO,IAAI5C,gBAAgB,CAAChD,uBAAuB,CAAC8B,uBAAuB,CAAC5B,IAAI,EAAEF,uBAAuB,CAAC8B,uBAAuB,CAAC3B,IAAI,CAAC;GAC1I;;;;EAKM6C,gBAAA,CAAA6C,0BAA0B,GAAjC;IACI,OAAO,IAAI7C,gBAAgB,CAAChD,uBAAuB,CAAC+B,eAAe,CAAC7B,IAAI,EAAEF,uBAAuB,CAAC+B,eAAe,CAAC5B,IAAI,CAAC;GAC1H;;;;EAKM6C,gBAAA,CAAA8C,gCAAgC,GAAvC;IACI,OAAO,IAAI9C,gBAAgB,CAAChD,uBAAuB,CAACgC,qBAAqB,CAAC9B,IAAI,EAAEF,uBAAuB,CAACgC,qBAAqB,CAAC7B,IAAI,CAAC;GACtI;;;;EAKM6C,gBAAA,CAAA+C,4BAA4B,GAAnC,UAAoCC,SAAiB,EAAEC,QAAgB;IACnE,OAAO,IAAIjD,gBAAgB,CAAChD,uBAAuB,CAACiC,iBAAiB,CAAC/B,IAAI,EAAKF,uBAAuB,CAACiC,iBAAiB,CAAC9B,IAAI,iCAA4B6F,SAAS,+BAA0BC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAG,CAAC;GACxN;;;;EAKMlD,gBAAA,CAAAmD,2BAA2B,GAAlC,UAAmCH,SAAiB,EAAEC,QAAgB;IAClE,OAAO,IAAIjD,gBAAgB,CAAChD,uBAAuB,CAACkC,gBAAgB,CAAChC,IAAI,EAAKF,uBAAuB,CAACkC,gBAAgB,CAAC/B,IAAI,iCAA4B6F,SAAS,+BAA0BC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAG,CAAC;GACtN;;;;EAKMlD,gBAAA,CAAAoD,uCAAuC,GAA9C,UAA+CH,QAAgB;IAC3D,OAAO,IAAIjD,gBAAgB,CAAChD,uBAAuB,CAACmC,4BAA4B,CAACjC,IAAI,EAAKF,uBAAuB,CAACmC,4BAA4B,CAAChC,IAAI,+BAA0B8F,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAG,CAAC;GACzM;;;;EAKMlD,gBAAA,CAAAqD,4BAA4B,GAAnC,UAAoCC,WAAmB;IACnD,OAAO,IAAItD,gBAAgB,CAAChD,uBAAuB,CAACoC,sBAAsB,CAAClC,IAAI,EAAKF,uBAAuB,CAACoC,sBAAsB,CAACjC,IAAI,WAAMmG,WAAa,CAAC;GAC9J;;;;EAKMtD,gBAAA,CAAAuD,sCAAsC,GAA7C,UAA8CC,KAAa;IACvD,OAAO,IAAIxD,gBAAgB,CAAChD,uBAAuB,CAACqC,2BAA2B,CAACnC,IAAI,EAAKF,uBAAuB,CAACqC,2BAA2B,CAAClC,IAAI,qCAAgCqG,KAAO,CAAC;GAC5L;;;;EAKMxD,gBAAA,CAAAyD,2BAA2B,GAAlC;IACI,OAAO,IAAIzD,gBAAgB,CAAChD,uBAAuB,CAACsC,gBAAgB,CAACpC,IAAI,EAAEF,uBAAuB,CAACsC,gBAAgB,CAACnC,IAAI,CAAC;GAC5H;;;;EAKM6C,gBAAA,CAAA0D,4CAA4C,GAAnD;IACI,OAAO,IAAI1D,gBAAgB,CAAChD,uBAAuB,CAACuC,+BAA+B,CAACrC,IAAI,EAAEF,uBAAuB,CAACuC,+BAA+B,CAACpC,IAAI,CAAC;GAC1J;;;;EAKM6C,gBAAA,CAAA2D,8BAA8B,GAArC;IACI,OAAO,IAAI3D,gBAAgB,CAAChD,uBAAuB,CAACwC,mBAAmB,CAACtC,IAAI,EAAEF,uBAAuB,CAACwC,mBAAmB,CAACrC,IAAI,CAAC;GAClI;;;;EAKM6C,gBAAA,CAAA4D,iDAAiD,GAAxD;IACI,OAAO,IAAI5D,gBAAgB,CAAChD,uBAAuB,CAACyC,sCAAsC,CAACvC,IAAI,EAAEF,uBAAuB,CAACyC,sCAAsC,CAACtC,IAAI,CAAC;GACxK;;;;EAKM6C,gBAAA,CAAA6D,iCAAiC,GAAxC;IACI,OAAO,IAAI7D,gBAAgB,CAAChD,uBAAuB,CAAC0C,sBAAsB,CAACxC,IAAI,EAAEF,uBAAuB,CAAC0C,sBAAsB,CAACvC,IAAI,CAAC;GACxI;;;;EAKM6C,gBAAA,CAAA8D,sCAAsC,GAA7C;IACI,OAAO,IAAI9D,gBAAgB,CAAChD,uBAAuB,CAAC2C,2BAA2B,CAACzC,IAAI,EAAEF,uBAAuB,CAAC2C,2BAA2B,CAACxC,IAAI,CAAC;GAClJ;;;;;EAMM6C,gBAAA,CAAA+D,yCAAyC,GAAhD;IACI,OAAO,IAAI/D,gBAAgB,CAAChD,uBAAuB,CAAC4C,8BAA8B,CAAC1C,IAAI,EAAEF,uBAAuB,CAAC4C,8BAA8B,CAACzC,IAAI,CAAC;GACxJ;;;;EAKM6C,gBAAA,CAAAgE,wCAAwC,GAA/C;IACI,OAAO,IAAIhE,gBAAgB,CAAChD,uBAAuB,CAAC6C,kCAAkC,CAAC3C,IAAI,EAAEF,uBAAuB,CAAC6C,kCAAkC,CAAC1C,IAAI,CAAC;GAChK;;;;;EAMM6C,gBAAA,CAAAiE,4CAA4C,GAAnD;IACI,OAAO,IAAIjE,gBAAgB,CAAChD,uBAAuB,CAAC8C,wBAAwB,CAAC5C,IAAI,EAAEF,uBAAuB,CAAC8C,wBAAwB,CAAC3C,IAAI,CAAC;GAC5I;EACL,OAAA6C,gBAAC;AAAD,CArVA,CAAsCkE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}