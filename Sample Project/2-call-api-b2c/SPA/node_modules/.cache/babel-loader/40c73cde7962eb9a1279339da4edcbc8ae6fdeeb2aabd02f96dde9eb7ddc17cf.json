{"ast":null,"code":"var _jsxFileName = \"/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/src/components/ListView.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { nanoid } from \"nanoid\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { TodoForm } from \"./TodoForm\";\nimport { TodoItem } from \"./TodoItem\";\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\nimport { protectedResources } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usePrevious(value) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport const ListView = props => {\n  _s2();\n  const {\n    instance\n  } = useMsal();\n  const account = instance.getActiveAccount();\n  const {\n    error,\n    execute\n  } = useFetchWithMsal({\n    scopes: protectedResources.apiTodoList.scopes.write\n  });\n  const [tasks, setTasks] = useState(props.todoListData);\n  const handleCompleteTask = id => {\n    const updatedTask = tasks.find(task => id === task.id);\n    updatedTask.completed = !updatedTask.completed;\n    execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n      const updatedTasks = tasks.map(task => {\n        if (id === task.id) {\n          return {\n            ...task,\n            completed: !task.completed\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    });\n  };\n  const handleAddTask = name => {\n    var _account$idTokenClaim;\n    const newTask = {\n      owner: (_account$idTokenClaim = account.idTokenClaims) === null || _account$idTokenClaim === void 0 ? void 0 : _account$idTokenClaim.sub,\n      id: nanoid(),\n      name: name,\n      completed: false\n    };\n    execute(\"POST\", protectedResources.apiTodoList.endpoint, newTask).then(response => {\n      if (response && response.message === \"success\") {\n        setTasks([...tasks, newTask]);\n      }\n    });\n  };\n  const handleDeleteTask = id => {\n    execute(\"DELETE\", protectedResources.apiTodoList.endpoint + `/${id}`).then(response => {\n      if (response && response.message === \"success\") {\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainingTasks);\n      }\n    });\n  };\n  const handleEditTask = (id, newName) => {\n    const updatedTask = tasks.find(task => id === task.id);\n    updatedTask.name = newName;\n    execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n      const updatedTasks = tasks.map(task => {\n        if (id === task.id) {\n          return {\n            ...task,\n            name: newName\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    });\n  };\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    completeTask: handleCompleteTask,\n    deleteTask: handleDeleteTask,\n    editTask: handleEditTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this));\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-area-div\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      tabIndex: \"-1\",\n      ref: listHeadingRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"todo-list\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s2(ListView, \"r1Dr12qP1trth1oag1RxsNqyyyM=\", false, function () {\n  return [useMsal, useFetchWithMsal, usePrevious];\n});\n_c = ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMsal","nanoid","ListGroup","TodoForm","TodoItem","useFetchWithMsal","protectedResources","jsxDEV","_jsxDEV","usePrevious","value","_s","ref","current","ListView","props","_s2","instance","account","getActiveAccount","error","execute","scopes","apiTodoList","write","tasks","setTasks","todoListData","handleCompleteTask","id","updatedTask","find","task","completed","endpoint","then","updatedTasks","map","handleAddTask","name","_account$idTokenClaim","newTask","owner","idTokenClaims","sub","response","message","handleDeleteTask","remainingTasks","filter","handleEditTask","newName","taskList","completeTask","deleteTask","editTask","fileName","_jsxFileName","lineNumber","columnNumber","listHeadingRef","prevTaskLength","length","focus","children","className","addTask","tabIndex","_c","$RefreshReg$"],"sources":["/Users/ling/Desktop/OneCareer/SignUp/2-call-api-b2c/SPA/src/components/ListView.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { nanoid } from \"nanoid\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport { TodoForm } from \"./TodoForm\";\nimport { TodoItem } from \"./TodoItem\";\n\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\nimport { protectedResources } from \"../authConfig\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport const ListView = (props) => {\n    const { instance } = useMsal();\n    const account = instance.getActiveAccount();\n\n    const { error, execute } = useFetchWithMsal({\n        scopes: protectedResources.apiTodoList.scopes.write\n    });\n\n    const [tasks, setTasks] = useState(props.todoListData);\n\n    const handleCompleteTask = (id) => {\n        const updatedTask = tasks.find(task => id === task.id);\n        updatedTask.completed = !updatedTask.completed;\n\n        execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n            const updatedTasks = tasks.map(task => {\n                if (id === task.id) {\n                    return { ...task, completed: !task.completed }\n                }\n                return task;\n            });\n            setTasks(updatedTasks);\n        });\n    }\n\n    const handleAddTask = (name) => {\n        const newTask = {\n            owner: account.idTokenClaims?.sub,\n            id: nanoid(),\n            name: name,\n            completed: false\n        };\n\n        execute(\"POST\", protectedResources.apiTodoList.endpoint, newTask).then((response) => {\n            if (response && response.message === \"success\") {\n                setTasks([...tasks, newTask]);\n            }\n        })\n    }\n\n    const handleDeleteTask = (id) => {\n        execute(\"DELETE\", protectedResources.apiTodoList.endpoint + `/${id}`).then((response) => {\n            if (response && response.message === \"success\") {\n                const remainingTasks = tasks.filter(task => id !== task.id);\n                setTasks(remainingTasks);\n            }\n        });\n    }\n\n    const handleEditTask = (id, newName) => {\n        const updatedTask = tasks.find(task => id === task.id);\n        updatedTask.name = newName;\n\n        execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n            const updatedTasks = tasks.map(task => {\n                if (id === task.id) {\n                    return { ...task, name: newName }\n                }\n                return task;\n            });\n            setTasks(updatedTasks);\n        });\n    }\n\n    const taskList = tasks.map(task => (\n        <TodoItem\n            id={task.id}\n            name={task.name}\n            completed={task.completed}\n            key={task.id}\n            completeTask={handleCompleteTask}\n            deleteTask={handleDeleteTask}\n            editTask={handleEditTask}\n        />\n    ));\n\n    const listHeadingRef = useRef(null);\n    const prevTaskLength = usePrevious(tasks.length);\n\n    useEffect(() => {\n        if (tasks.length - prevTaskLength === -1) {\n            listHeadingRef.current.focus();\n        }\n    }, [tasks.length, prevTaskLength]);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    \n    return (\n        <div className=\"data-area-div\">\n            <TodoForm addTask={handleAddTask} />\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}></h2>\n            <ListGroup className=\"todo-list\">\n                {taskList}\n            </ListGroup>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}